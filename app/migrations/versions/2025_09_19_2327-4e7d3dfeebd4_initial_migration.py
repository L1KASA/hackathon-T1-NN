"""Initial migration

Revision ID: 4e7d3dfeebd4
Revises: 
Create Date: 2025-09-19 23:27:58.613186

"""
from typing import Sequence
from typing import Union

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = '4e7d3dfeebd4'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('employees',
    sa.Column('id', sa.BigInteger(), nullable=False, comment='Unique identifier of the employee'),
    sa.Column('email', sa.String(), nullable=False, comment='Email address of the employee'),
    sa.Column('first_name', sa.String(), nullable=False, comment='First name of the employee'),
    sa.Column('last_name', sa.String(), nullable=False, comment='Last name of the employee'),
    sa.Column('department', sa.String(), nullable=True, comment='Department of the employee'),
    sa.Column('rating', sa.Float(), nullable=False, comment='Rating of the employee'),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=False, comment='Date and time when the employee was created'),
    sa.Column('updated_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=False, comment='Date and time when the employee was last updated'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_index(op.f('ix_employees_id'), 'employees', ['id'], unique=False)
    op.create_table('skills',
    sa.Column('id', sa.BigInteger(), nullable=False, comment='Unique identifier of the skill'),
    sa.Column('name', sa.String(), nullable=False, comment='Name of the skill'),
    sa.Column('description', sa.Text(), nullable=True, comment='Description of the skill'),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=False, comment='Date and time when the skill was created'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_skills_id'), 'skills', ['id'], unique=False)
    op.create_table('employee_skills',
    sa.Column('id', sa.BigInteger(), nullable=False, comment='Unique identifier of the employee skill'),
    sa.Column('employee_id', sa.BigInteger(), nullable=False),
    sa.Column('skill_id', sa.BigInteger(), nullable=False),
    sa.Column('proficiency_level', sa.Integer(), nullable=False, comment='Proficiency level of the skill'),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=False, comment='Date and time when the employee skill was created'),
    sa.ForeignKeyConstraint(['employee_id'], ['employees.id'], ),
    sa.ForeignKeyConstraint(['skill_id'], ['skills.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_employee_skills_id'), 'employee_skills', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_employee_skills_id'), table_name='employee_skills')
    op.drop_table('employee_skills')
    op.drop_index(op.f('ix_skills_id'), table_name='skills')
    op.drop_table('skills')
    op.drop_index(op.f('ix_employees_id'), table_name='employees')
    op.drop_table('employees')
    # ### end Alembic commands ###
