"""Gamification

Revision ID: f2c8b85115fb
Revises: 3957d3e4de51
Create Date: 2025-09-20 09:44:37.694041

"""
from typing import Sequence
from typing import Union

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = 'f2c8b85115fb'
down_revision: Union[str, Sequence[str], None] = '3957d3e4de51'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('career_roadmaps',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('title', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('target_role', sa.String(length=100), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_career_roadmaps_id'), 'career_roadmaps', ['id'], unique=False)
    op.create_table('leaderboards',
    sa.Column('id', sa.BigInteger(), nullable=False, comment='Unique identifier of the leaderboard'),
    sa.Column('name', sa.String(length=100), nullable=False, comment='Name of the leaderboard'),
    sa.Column('period', sa.String(length=20), nullable=False, comment='Time period of the leaderboard (weekly, monthly, all-time)'),
    sa.Column('is_active', sa.Boolean(), nullable=False, comment='Whether the leaderboard is currently active'),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=False, comment='Date and time when the leaderboard was created'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_leaderboards_id'), 'leaderboards', ['id'], unique=False)
    op.create_table('levels',
    sa.Column('id', sa.BigInteger(), nullable=False, comment='Unique identifier of the level'),
    sa.Column('level_name', sa.String(length=50), nullable=False, comment='Name of the level (e.g., Novice, Explorer, Expert, Leader)'),
    sa.Column('min_xp', sa.Integer(), nullable=False, comment='Minimum experience points required to reach this level'),
    sa.Column('badge_url', sa.String(length=255), nullable=True, comment='URL to the level badge image'),
    sa.Column('description', sa.Text(), nullable=True, comment='Description of the level and its privileges'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_levels_id'), 'levels', ['id'], unique=False)
    op.create_table('quests',
    sa.Column('id', sa.BigInteger(), nullable=False, comment='Unique identifier of the quest'),
    sa.Column('name', sa.String(length=100), nullable=False, comment='Name of the quest'),
    sa.Column('description', sa.Text(), nullable=False, comment='Detailed description of the quest objectives'),
    sa.Column('xp_reward', sa.Integer(), nullable=False, comment='Experience points awarded for completing the quest'),
    sa.Column('is_active', sa.Boolean(), nullable=False, comment='Whether the quest is currently available'),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=False, comment='Date and time when the skill was created'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_quests_id'), 'quests', ['id'], unique=False)
    op.create_table('rewards',
    sa.Column('id', sa.BigInteger(), nullable=False, comment='Unique identifier of the reward'),
    sa.Column('name', sa.String(length=100), nullable=False, comment='Name of the reward'),
    sa.Column('description', sa.Text(), nullable=False, comment='Description of the reward and how to earn it'),
    sa.Column('type', sa.String(length=20), nullable=False, comment='Type of reward: virtual, career, real'),
    sa.Column('subtype', sa.String(length=30), nullable=False, comment='Subtype: badge, avatar, profile_theme, career_opportunity, physical_item'),
    sa.Column('image_url', sa.String(length=255), nullable=True, comment='URL to reward image (for badges, avatars, etc)'),
    sa.Column('xp_reward', sa.Integer(), nullable=False, comment='Experience points awarded with this reward'),
    sa.Column('is_active', sa.Boolean(), nullable=False, comment='Whether the reward is currently available'),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=False, comment='Date and time when the reward was created'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_rewards_id'), 'rewards', ['id'], unique=False)
    op.create_table('leaderboard_criteria',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('leaderboard_id', sa.BigInteger(), nullable=False),
    sa.Column('metric', sa.String(length=50), nullable=False),
    sa.Column('weight', sa.Float(), nullable=False),
    sa.ForeignKeyConstraint(['leaderboard_id'], ['leaderboards.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('quest_required_actions',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('quest_id', sa.BigInteger(), nullable=False),
    sa.Column('action_type', sa.String(length=50), nullable=False),
    sa.Column('required_count', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['quest_id'], ['quests.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('roadmap_quests',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('roadmap_id', sa.BigInteger(), nullable=False, comment='ID of the career roadmap'),
    sa.Column('quest_id', sa.BigInteger(), nullable=False, comment='ID of the quest'),
    sa.Column('importance', sa.Float(), nullable=False, comment='How important this quest is for the roadmap (0-1)'),
    sa.Column('is_required', sa.Boolean(), nullable=False, comment='Whether this quest is required to complete the roadmap'),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=False, comment='Date and time when the association was created'),
    sa.ForeignKeyConstraint(['quest_id'], ['quests.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['roadmap_id'], ['career_roadmaps.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('roadmap_required_skills',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('roadmap_id', sa.BigInteger(), nullable=False),
    sa.Column('skill_id', sa.BigInteger(), nullable=False),
    sa.Column('required_level', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['roadmap_id'], ['career_roadmaps.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['skill_id'], ['skills.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('employee_quests',
    sa.Column('id', sa.BigInteger(), nullable=False, comment='Unique identifier of the employee quest progress'),
    sa.Column('employee_id', sa.BigInteger(), nullable=False, comment='ID of the employee working on the quest'),
    sa.Column('quest_id', sa.BigInteger(), nullable=False, comment='ID of the quest'),
    sa.Column('is_completed', sa.Boolean(), nullable=False, comment='Whether the quest has been completed'),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=False, comment='Date and time when the quest was created'),
    sa.ForeignKeyConstraint(['employee_id'], ['employees.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['quest_id'], ['quests.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_employee_quests_id'), 'employee_quests', ['id'], unique=False)
    op.create_table('employee_rewards',
    sa.Column('id', sa.BigInteger(), nullable=False, comment='Unique identifier of the employee-reward association'),
    sa.Column('employee_id', sa.BigInteger(), nullable=False, comment='ID of the employee who earned the reward'),
    sa.Column('reward_id', sa.BigInteger(), nullable=False, comment='ID of the reward that was earned'),
    sa.Column('earned_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=False, comment='Date and time when the reward was earned'),
    sa.Column('is_claimed', sa.Boolean(), nullable=False, comment='Whether the reward has been claimed (for real rewards)'),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=False, comment='Date and time when the skill was created'),
    sa.ForeignKeyConstraint(['employee_id'], ['employees.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['reward_id'], ['rewards.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_employee_rewards_id'), 'employee_rewards', ['id'], unique=False)
    op.create_table('employee_roadmaps',
    sa.Column('id', sa.BigInteger(), nullable=False, comment='Unique identifier of the employee roadmap progress'),
    sa.Column('employee_id', sa.BigInteger(), nullable=False, comment='ID of the employee following the roadmap'),
    sa.Column('roadmap_id', sa.BigInteger(), nullable=False, comment='ID of the career roadmap'),
    sa.Column('progress_percentage', sa.Float(), nullable=False, comment='Percentage of roadmap completion (0-100)'),
    sa.Column('is_completed', sa.Boolean(), nullable=False, comment='Whether the roadmap has been completed'),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=False, comment='Date and time when the employee roadmap was created'),
    sa.ForeignKeyConstraint(['employee_id'], ['employees.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['roadmap_id'], ['career_roadmaps.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_employee_roadmaps_id'), 'employee_roadmaps', ['id'], unique=False)
    op.create_table('experience_points',
    sa.Column('id', sa.BigInteger(), nullable=False, comment='Unique identifier of the experience record'),
    sa.Column('employee_id', sa.BigInteger(), nullable=False, comment='ID of the employee who earned the points'),
    sa.Column('points', sa.Integer(), nullable=False, comment='Number of experience points earned'),
    sa.Column('action_type', sa.String(length=50), nullable=False, comment='Type of action that earned the points (profile_update, skill_add, etc.)'),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=False, comment='Date and time when the skill was created'),
    sa.ForeignKeyConstraint(['employee_id'], ['employees.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_experience_points_id'), 'experience_points', ['id'], unique=False)
    op.create_table('leaderboard_entries',
    sa.Column('id', sa.BigInteger(), nullable=False, comment='Unique identifier of the leaderboard entry'),
    sa.Column('leaderboard_id', sa.BigInteger(), nullable=False, comment='ID of the leaderboard'),
    sa.Column('employee_id', sa.BigInteger(), nullable=False, comment='ID of the employee on the leaderboard'),
    sa.Column('score', sa.Float(), nullable=False, comment='Calculated score based on leaderboard criteria'),
    sa.Column('rank', sa.Integer(), nullable=False, comment='Current rank position on the leaderboard'),
    sa.ForeignKeyConstraint(['employee_id'], ['employees.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['leaderboard_id'], ['leaderboards.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_leaderboard_entries_id'), 'leaderboard_entries', ['id'], unique=False)
    op.create_table('tips',
    sa.Column('id', sa.BigInteger(), nullable=False, comment='Unique identifier of the tip record'),
    sa.Column('from_employee_id', sa.BigInteger(), nullable=False, comment='ID of the employee sending the tip'),
    sa.Column('to_employee_id', sa.BigInteger(), nullable=False, comment='ID of the employee receiving the tip'),
    sa.Column('message', sa.Text(), nullable=False, comment='Tip message from the sender'),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=False, comment='Date and time when the tip was created'),
    sa.ForeignKeyConstraint(['from_employee_id'], ['employees.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['to_employee_id'], ['employees.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_tips_id'), 'tips', ['id'], unique=False)
    op.create_table('quest_action_progress',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('employee_quest_id', sa.BigInteger(), nullable=False),
    sa.Column('action_type', sa.String(length=50), nullable=False),
    sa.Column('current_count', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['employee_quest_id'], ['employee_quests.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.add_column('employees', sa.Column('level_id', sa.BigInteger(), nullable=True, comment='Current level ID of the employee'))
    op.add_column('employees', sa.Column('total_xp', sa.Integer(), server_default='0', nullable=False, comment='Total experience points earned by the employee'))
    op.create_foreign_key(None, 'employees', 'levels', ['level_id'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'employees', type_='foreignkey')
    op.drop_column('employees', 'total_xp')
    op.drop_column('employees', 'level_id')
    op.drop_table('quest_action_progress')
    op.drop_index(op.f('ix_tips_id'), table_name='tips')
    op.drop_table('tips')
    op.drop_index(op.f('ix_leaderboard_entries_id'), table_name='leaderboard_entries')
    op.drop_table('leaderboard_entries')
    op.drop_index(op.f('ix_experience_points_id'), table_name='experience_points')
    op.drop_table('experience_points')
    op.drop_index(op.f('ix_employee_roadmaps_id'), table_name='employee_roadmaps')
    op.drop_table('employee_roadmaps')
    op.drop_index(op.f('ix_employee_rewards_id'), table_name='employee_rewards')
    op.drop_table('employee_rewards')
    op.drop_index(op.f('ix_employee_quests_id'), table_name='employee_quests')
    op.drop_table('employee_quests')
    op.drop_table('roadmap_required_skills')
    op.drop_table('roadmap_quests')
    op.drop_table('quest_required_actions')
    op.drop_table('leaderboard_criteria')
    op.drop_index(op.f('ix_rewards_id'), table_name='rewards')
    op.drop_table('rewards')
    op.drop_index(op.f('ix_quests_id'), table_name='quests')
    op.drop_table('quests')
    op.drop_index(op.f('ix_levels_id'), table_name='levels')
    op.drop_table('levels')
    op.drop_index(op.f('ix_leaderboards_id'), table_name='leaderboards')
    op.drop_table('leaderboards')
    op.drop_index(op.f('ix_career_roadmaps_id'), table_name='career_roadmaps')
    op.drop_table('career_roadmaps')
    # ### end Alembic commands ###
